name: Build and publish a new version

on:
  workflow_dispatch:
    inputs:
        tag:
          description: 'Release Tag. This is in the form x.y.z'
          required: true

jobs:
  build:
    name: Build DeepView.Profile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Create release branch
        run: |
          git branch release/${{ github.event.inputs.tag }}

      - name: Update version number
        run: |
          poetry version ${{ github.event.inputs.tag }}

      - name: Build Python artifacts
        run: |
          poetry build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.inputs.tag }}
          path: dist/*${{ github.event.inputs.tag }}*

  publish-release:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.event.inputs.tag }}
          path: dist

      - name: Publish a release
        run: |
          RELEASE_NOTES="$(git log $(git describe --abbrev=0 --tags).. --merges --pretty=format:"%s %b" | cut -f 4,7- -d ' ')"
          echo "Autogenerated Release Notes:"
          echo "$RELEASE_NOTES"
          RELEASE_ARTIFACTS=$(find ./dist -name "*${{ github.event.inputs.tag }}*" -type f | paste -s -d ' ' - )
          VERSION_TAG="v${{ github.event.inputs.tag }}"
          gh auth login --with-token <<< "${{ secrets.GH_TOKEN }}"
          gh release create "$VERSION_TAG" \
                                  --title "$VERSION_TAG" \
                                  --notes "$RELEASE_NOTES" \
                                  --target "$GITHUB_SHA" \
                                  $RELEASE_ARTIFACTS
          gh pr create --title "Release $VERSION_TAG" --body "$RELEASE_NOTES"

  publish-to-test-pypi:
    name: Publish to Test PyPI
    needs: publish-release
    runs-on: ubuntu-latest
    environment: Test
    concurrency: Test
    permissions:
      id-token: write

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.event.inputs.tag }}
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository_url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish to PyPI
    needs: publish-to-test-pypi
    runs-on: ubuntu-latest
    environment: Production
    concurrency: Production
    permissions:
      id-token: write


    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.event.inputs.tag }}
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository_url: https://upload.pypi.org/legacy/
